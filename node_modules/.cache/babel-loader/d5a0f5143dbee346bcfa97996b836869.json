{"ast":null,"code":"/**\n * @param {string} string  \n * @param {number} limit \n * @return {string}  \n */\nconst removeRepeated = (string, limit) => {\n  for (let i = 0; i < string.length; i++) {\n    let count = 1;\n\n    if (i + 1 !== string.length) {\n      let j = i + 1;\n\n      while (j < string.length) {\n        if (string[i] === string[j]) {\n          if (count === limit) {\n            var pieceOne = string.substring(0, j);\n            var pieceTwo = string.substring(j + 1, string.length);\n            string = pieceOne + pieceTwo;\n          } else {\n            count++;\n            j++;\n          }\n        } else break;\n      }\n    }\n  }\n\n  return string;\n};\n\nexport default removeRepeated;","map":{"version":3,"sources":["/home/luiza/aurum-javascript/frontend/src/funcoes/removeRepeated.js"],"names":["removeRepeated","string","limit","i","length","count","j","pieceOne","substring","pieceTwo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,MAAM,CAACG,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5B,QAAIE,KAAK,GAAG,CAAZ;;AACA,QAAGF,CAAC,GAAC,CAAF,KAAMF,MAAM,CAACG,MAAhB,EAAuB;AACnB,UAAIE,CAAC,GAAGH,CAAC,GAAC,CAAV;;AACA,aAAMG,CAAC,GAACL,MAAM,CAACG,MAAf,EAAsB;AAClB,YAAGH,MAAM,CAACE,CAAD,CAAN,KAAYF,MAAM,CAACK,CAAD,CAArB,EAAyB;AACrB,cAAGD,KAAK,KAAGH,KAAX,EAAiB;AACb,gBAAIK,QAAQ,GAACN,MAAM,CAACO,SAAP,CAAiB,CAAjB,EAAmBF,CAAnB,CAAb;AACA,gBAAIG,QAAQ,GAACR,MAAM,CAACO,SAAP,CAAiBF,CAAC,GAAC,CAAnB,EAAqBL,MAAM,CAACG,MAA5B,CAAb;AACAH,YAAAA,MAAM,GAAGM,QAAQ,GAACE,QAAlB;AACH,WAJD,MAIM;AACFJ,YAAAA,KAAK;AACLC,YAAAA,CAAC;AACJ;AACJ,SATD,MASM;AACT;AACJ;AACJ;;AACD,SAAOL,MAAP;AACH,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["/**\n * @param {string} string  \n * @param {number} limit \n * @return {string}  \n */\nconst removeRepeated = (string, limit) => {\n    for(let i=0;i<string.length;i++){\n        let count = 1;\n        if(i+1!==string.length){\n            let j = i+1;\n            while(j<string.length){\n                if(string[i]===string[j]){\n                    if(count===limit){\n                        var pieceOne=string.substring(0,j);\n                        var pieceTwo=string.substring(j+1,string.length);\n                        string = pieceOne+pieceTwo;\n                    }else {\n                        count++;\n                        j++;\n                    }\n                }else break;\n            }\n        }\n    }\n    return string;\n}\n\nexport default removeRepeated;"]},"metadata":{},"sourceType":"module"}