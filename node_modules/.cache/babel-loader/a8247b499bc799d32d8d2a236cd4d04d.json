{"ast":null,"code":"/**\n * @param {string} string  \n * @param {number} limit \n * @return {string}  \n */\nconst removeRepeated = (string, limit) => {\n  console.log('teste');\n\n  for (let i = 0; i < string.length; i++) {\n    let count = 1;\n\n    if (i + 1 !== string.length) {\n      let j = i + 1;\n\n      while (j < string.length) {\n        if (string[i] === string[j]) {\n          console.log('2teste');\n\n          if (count === limit) {\n            console.log('3teste');\n            var pieceOne = string.substring(0, j);\n            var pieceTwo = string.substring(j + 1, string.length);\n            string = pieceOne + pieceTwo;\n          } else {\n            count++;\n            j++;\n          }\n        } else break;\n      }\n    }\n  }\n\n  return string;\n};\n\nexport default removeRepeated;","map":{"version":3,"sources":["/home/luiza/aurum-javascript/frontend/src/exer1.js"],"names":["removeRepeated","string","limit","console","log","i","length","count","j","pieceOne","substring","pieceTwo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,MAAM,CAACK,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5B,QAAIE,KAAK,GAAG,CAAZ;;AACA,QAAGF,CAAC,GAAC,CAAF,KAAMJ,MAAM,CAACK,MAAhB,EAAuB;AACnB,UAAIE,CAAC,GAAGH,CAAC,GAAC,CAAV;;AACA,aAAMG,CAAC,GAACP,MAAM,CAACK,MAAf,EAAsB;AAClB,YAAGL,MAAM,CAACI,CAAD,CAAN,KAAYJ,MAAM,CAACO,CAAD,CAArB,EAAyB;AACrBL,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,cAAGG,KAAK,KAAGL,KAAX,EAAiB;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,gBAAIK,QAAQ,GAACR,MAAM,CAACS,SAAP,CAAiB,CAAjB,EAAmBF,CAAnB,CAAb;AACA,gBAAIG,QAAQ,GAACV,MAAM,CAACS,SAAP,CAAiBF,CAAC,GAAC,CAAnB,EAAqBP,MAAM,CAACK,MAA5B,CAAb;AACAL,YAAAA,MAAM,GAAGQ,QAAQ,GAACE,QAAlB;AACH,WALD,MAKM;AACFJ,YAAAA,KAAK;AACLC,YAAAA,CAAC;AACJ;AACJ,SAXD,MAWM;AACT;AACJ;AACJ;;AACD,SAAOP,MAAP;AACH,CAvBD;;AAyBA,eAAeD,cAAf","sourcesContent":["/**\n * @param {string} string  \n * @param {number} limit \n * @return {string}  \n */\nconst removeRepeated = (string, limit) => {\n    console.log('teste');\n    for(let i=0;i<string.length;i++){\n        let count = 1;\n        if(i+1!==string.length){\n            let j = i+1;\n            while(j<string.length){\n                if(string[i]===string[j]){\n                    console.log('2teste');\n                    if(count===limit){\n                        console.log('3teste');\n                        var pieceOne=string.substring(0,j);\n                        var pieceTwo=string.substring(j+1,string.length);\n                        string = pieceOne+pieceTwo;\n                    }else {\n                        count++;\n                        j++;\n                    }\n                }else break;\n            }\n        }\n    }\n    return string;\n}\n\nexport default removeRepeated;"]},"metadata":{},"sourceType":"module"}