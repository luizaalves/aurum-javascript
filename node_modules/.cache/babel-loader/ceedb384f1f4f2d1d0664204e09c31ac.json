{"ast":null,"code":"/**\n * @param {string} string  \n * @param {number} times \n * @return {string}  \n */\nconst replaceChar = (string, times) => {\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '?') {\n      if (i === 0) {\n        console.log(string[string.length - 1]);\n        /*for(let k=1;k<string.length;k++)\n        if(string[string.length-k]!=='?'){\n            var strTemp;\n            for(let j=0;j<times;j++){\n                strTemp=strTemp+ string[string.length-k];\n            }\n            string=strTemp+string;\n        }*/\n      } else {\n        var pieceOne = string.substring(0, i);\n        var pieceTwo = string.substring(i + 1, string.length);\n\n        for (let j = 0; j < times; j++) {\n          pieceOne = pieceOne + string[i - 1];\n        }\n\n        string = pieceOne + pieceTwo;\n        console.log(string);\n      }\n    }\n  }\n\n  return string;\n};\n\nexport default replaceChar;","map":{"version":3,"sources":["/home/luiza/aurum-javascript/frontend/src/funcoes/criandoRepeticao.js"],"names":["replaceChar","string","times","i","length","console","log","pieceOne","substring","pieceTwo","j"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,MAAM,CAACG,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5B,QAAGF,MAAM,CAACE,CAAD,CAAN,KAAY,GAAf,EAAmB;AACf,UAAGA,CAAC,KAAG,CAAP,EAAS;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACA,MAAM,CAACG,MAAP,GAAc,CAAf,CAAlB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACa,OAVD,MAUK;AACD,YAAIG,QAAQ,GAACN,MAAM,CAACO,SAAP,CAAiB,CAAjB,EAAmBL,CAAnB,CAAb;AACA,YAAIM,QAAQ,GAACR,MAAM,CAACO,SAAP,CAAiBL,CAAC,GAAC,CAAnB,EAAqBF,MAAM,CAACG,MAA5B,CAAb;;AACA,aAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,KAAd,EAAoBQ,CAAC,EAArB,EAAwB;AACpBH,UAAAA,QAAQ,GAACA,QAAQ,GAAEN,MAAM,CAACE,CAAC,GAAC,CAAH,CAAzB;AACH;;AACDF,QAAAA,MAAM,GAAGM,QAAQ,GAACE,QAAlB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH;AAEJ;AACJ;;AACD,SAAOA,MAAP;AACH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["/**\n * @param {string} string  \n * @param {number} times \n * @return {string}  \n */\nconst replaceChar = (string, times) => {\n    for(let i=0;i<string.length;i++){\n        if(string[i]==='?'){\n            if(i===0){\n                console.log(string[string.length-1]);\n                /*for(let k=1;k<string.length;k++)\n                if(string[string.length-k]!=='?'){\n                    var strTemp;\n                    for(let j=0;j<times;j++){\n                        strTemp=strTemp+ string[string.length-k];\n                    }\n                    string=strTemp+string;\n                }*/\n            }else{\n                var pieceOne=string.substring(0,i);\n                var pieceTwo=string.substring(i+1,string.length);\n                for(let j=0;j<times;j++){\n                    pieceOne=pieceOne+ string[i-1];\n                }\n                string = pieceOne+pieceTwo;\n                console.log(string);\n            }\n            \n        }\n    }\n    return string;\n}\n\nexport default replaceChar;"]},"metadata":{},"sourceType":"module"}